security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    encoders:
        App\Entity\User:
            algorithm: argon2i
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 2592000 # 30 days in seconds
            logout:
                path: app_logout
            access_denied_handler: App\Security\AccessDeniedHandler
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/user/chngeEmail, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/user/changePassword, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/avatar/changeImage, roles: IS_AUTHENTICATED_FULLY }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER, ROLE_MAP_MANAGER, ROLE_BOSS_MANAGER, ROLE_EVENT_MANAGER]
